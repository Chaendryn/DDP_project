runApp()
runApp()
runApp()
names(vehicleMakes)
vehicleMakes <- read.csv("vehicleTrends.csv", header = TRUE)
saveRDS(vehicleMakes, file="vehicleMakes.Rds")
runApp()
View(vehicleMakes)
library(plyr)
str(vehicleMakes$Week)
vehicleMakes <- read.csv("vehicleTrends.csv", header = TRUE, stringsAsFactors = FALSE)
str(vehicleMakes$Week)
vehicleMakes$Week <- as.Date(vehicleMakes$Week)
str(vehicleMakes$Week)
library(lubridate)
mutate(vehicleMakes, Week = year(Week))
View(vehicleMakes)
mutate(vehicleMakes, Year = year(Week))
View(vehicleMakes)
vehicleMakes <- mutate(vehicleMakes, Year = year(Week))
vehicleMakes <- mutate(vehicleMakes, Month = month(Week))
View(vehicleMakes)
VehYear <- aggregate(. ~ Year, data = vehicleMakes, sum)
View(VehYear)
Vehtest <- aggregate(. ~ Year + Month, data = vehicleMakes, sum)
View(Vehtest)
vehicleData <- aggregate(. ~ Year + Month, data = vehicleMakes, sum)
rm(Vehtest)
rm(VehYear)
View(test2)
rm(test2)
rm(testing)
vehtest <- subset(vehicleData, select = -c("Week"))
vehtest <- subset(vehicleData, select = -c(Week))
View(vehtest)
str(vehtest)
vData <- vehtest
rm(vehtest)
saveRDS(vData, file = "vData.Rds")
runApp()
runApp()
View(vehicleData)
View(vData)
source("global.R")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shiny)
library(plotly)
runApp()
runApp()
deployApp()
library(shinyApps)
library(shinyapps)
deployApp()
library(ggplot2)
runApp()
qplot(chrysler ~ Month + Year, data = data, colour = clarity)
View(data)
qplot(chrysler ~ Month, data = data, colour = clarity)
qplot(data$chrysler ~ data$Month, data = data, colour = clarity)
qplot(data$chrysler ~ ., data = data, colour = clarity)
qplot(chrysler ~ Year, data = vData, colour = clarity)
qplot(chrysler, Year, data = vData, colour = clarity)
qplot(chrysler, Year, data = vData, colour = Month)
qplot(chrysler, Month, data = vData, colour = Year)
qplot(Month, chrysler, data = vData, colour = Year)
runApp()
set_credentials_file(username="chaendryn", key="tw7wr68s4e")
set_credentials_file(chaendryn, tw7wr68s4e)
set_credentials_file(username="chaendryn", ApiKey="tw7wr68s4e")
runApp()
deployApp()
deployApp()
deployApp()
deployApp()
deployApp()
library(ggplot2)
library(shiny)
library(plotly)
hello <- ggplot(data=df, aes(x=Months, y=chrysler, group = Year, colour = Month)) +
geom_line(aes(linetype=chrysler), size=1) +     # Set linetype by sex
geom_point(size=3, fill="Year") +         # Use larger points, fill with white
ylim(0, max(df$chrysler)) +             # Set y range
scale_colour_hue(name="Month",      # Set legend title
l=30)  +                  # Use darker colors (lightness=30)
scale_shape_manual(name="Month",
values=c(22,21)) +      # Use points with a fill color
scale_linetype_discrete(name="Sex of payer") +
xlab("Time period") + ylab("Month") + # Set axis labels
ggtitle("Trying Stuff") +  # Set title
)
hello <- ggplot(data=df, aes(x=Months, y=chrysler, group = Year, colour = Month)) +
geom_line(aes(linetype=chrysler), size=1) +     # Set linetype by sex
geom_point(size=3, fill="Year") +         # Use larger points, fill with white
ylim(0, max(df$chrysler)) +             # Set y range
scale_colour_hue(name="Month",      # Set legend title
l=30)  +                  # Use darker colors (lightness=30)
scale_shape_manual(name="Month",
values=c(22,21)) +      # Use points with a fill color
scale_linetype_discrete(name="Sex of payer") +
xlab("Time period") + ylab("Month") + # Set axis labels
ggtitle("Trying Stuff")
hello <- ggplot(data=df, aes(x=Months, y=chrysler, group = Year, colour = Month))
head(data)
hello <- ggplot(data=df, aes(x=Months, y=chrysler, group = Year, colour = Month))
hello <- ggplot(data)
hello + aes(x = Months, y = chrysler)
geom_line(aes(linetype=chrysler), size=1)
geom_line(aes(linetype=1), size=1)
dev.off()
hello <- ggplot(data)
hello + aes(x = Months, y = chrysler)
hello + geom_line(aes(linetype=1), size=1)
hello + geom_line( size=1)
hello + geom_line()
dev.off()
library(ggplot2)
ggplot(data = vData, aes(x = Months, y = chrysler, colour = Year))
geom_line()
geom_points()
geom_point()
head(vData$chrysler)
str(vData$chrysler)
dev.off()
ggplot(data=vData, aes(x=Year, y=chrysler)) + geom_bar(stat="identity")
ggplot(data=vData, aes(x=Year, y=chrysler)) + geom_line(stat="identity")
ggplot(data=vData, aes(x=Month, y=chrysler)) + geom_bar(stat="identity")
ggplot(data=vData, aes(x=Month, y=chrysler)) + geom_line(stat="identity")
deployApp()
library(shiny)
deployApp()
library(shinyapps)
deployApp()
deployApp()
deployApp()
deployApp()
deployApp()
deployApp()
libary(reshape2)
library(reshape2)
data_long <- melt(data, id = "Year")
View(data_long)
rm(data_long)
data_long <- melt(data, id = c("Year", "Month")
)
View(data_long)
saveRDS(data_long, file = "vehLong")
ggplot(data=data_long,
aes(x=Month, y=chrysler, colour=variable)) +
geom_line()
ggplot(data=data_long,
aes(x=Month, y=(variable == chrysler), colour=variable)) +
geom_line()
ggplot(data=data_long,
aes(x=Month, y=("chrysler"), colour=variable)) +
geom_line()
ggplot(data=data_long,
aes(x=Month, y=(variable == "chrysler"), colour=variable)) +
geom_line()
ggplot(data=data_long,
aes(x=Month, y=(variable = "chrysler"), colour=variable)) +
geom_line()
ggplot(data=data_long,
aes(x=Month, y=value, colour=variable)) +
geom_line()
ggplot(data=data_long,
aes(x=Month, y=value, colour=variable, group=Year)) +
geom_line()
ggplot(data=data_long,
aes(x=year, y=value, colour=variable, group=Month)) +
geom_point()
ggplot(data=data_long,
aes(x=Year, y=value, colour=variable, group=Month)) +
geom_point()
deployApp()
saveRDS(data_long, file = "vehLong.Rds")
deployApp()
deployApp()
deployApp()
names(data_long)
deployApp()
deployApp()
deployApp()
runApp()
deployApp()
shinyapp::showLogs()
shinyapps::showLogs()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rm(data)
rmvData()
rmvData()
rm(vData)
rm(vehicleData)
rm(vehicleMakes)
rm(hello)
rm(test)
rm(test3)
rm(text1)
data <- data_long
subset_data <- data[c("chrysler", Year = 2010), ]
View(subset_data)
subset_data <- data[data$variable = "chrysler" & data$Year = 2010), ]
subset_data <- data[data$variable == "chrysler" & data$Year = 2010), ]
subset_data <- data[data$variable == "chrysler" & data$Year == 2010), ]
subset_data <- data[data$variable == "chrysler" & data$Year == 2010, ]
View(subset_data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(subset_data)
runApp()
deployApp()
rm(subset_data)
runApp()
library(reshape2)
data_test <- melt(data_long, id = c("variable")
)
View(data_test)
rm(data_test)
data_table <- readRDS("vData.Rds")
View(data_table)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
deployApp()
library(shiny)
library(shinyapps)
library(ggplot2)
library(plotly)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(GGally)
runApp()
runApp()
runApp()
panel.cor <- function(x, y, digits=2, prefix="", cex.cor)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r = cor(x, y)
txt <- format(c(r, 0.123456789), digits=digits)[1]
txt <- paste(prefix, txt, sep="")
if(missing(cex.cor)) cex <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex * abs(r))
}
library(reshape2)
runApp()
runApp()
runApp()
lv <- (names(data_table) %in% input$check_group)
tableData <- data_table[data_table$Year == 2010, lv]
lv <- (names(data_table) %in% c("chrysler", "jeep", "dodge"))
tableData <- data_table[data_table$Year == 2010, lv]
pairs(tableData, lower.panel=panel.smooth, upper.panel=panel.cor, main = "Fig. 2 - Correlation Pairs Plot")
runApp()
runApp()
runApp()
library(shiny)
library(shinyapps)
library(ggplot)
library(ggplot2)
library(stats)
library(graphics)
corplot <- pairs(tableData, lower.panel=panel.smooth, upper.panel=panel.cor, main = "Fig. 2 - Correlation Pairs Plot")
corplot
corplot2 <- pairs(tableData, lower.panel=panel.smooth, upper.panel=panel.cor, main = "Fig. 2 - Correlation Pairs Plot")
corplot2 <- plot(pairs(tableData, lower.panel=panel.smooth, upper.panel=panel.cor, main = "Fig. 2 - Correlation Pairs Plot"))
dev.oof()
dev.off()
rm(corplot)
rm(corplot2)
runApp()
library(GGally)
corplot2 <- ggpairs(tableData)
corplot2 <- ggpairs(tableData)
corplot2
View(tableData)
corplot2 <- ggpairs(tableData, colour = names(tableData))
corplot2
corplot2 <- ggpairs(tableData)
corplot2
library(colorBrewer)
runApp()
plotmatrix(tableData[,], colour="gray20") +
geom_smooth(method="lm")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(data_long)
ggVeh <- ggplot(data_long, aes(Month, value) + geom_point())
str(Month)
str(data_long$Month)
str(data_long$value)
ggVeh <- ggplot(data_long, aes(Month, value))
ggVeh
ggVeh + geom_point()
ggVeh <- ggplot(data_long, aes(as.factor(Month), value))
ggVeh
ggVeh + geom_point()
ggVeh + geom_line()
View(tableData)
View(data_table)
View(data_long)
str(data_long$Month)
data_test <- data_long
View(data_test)
data_test$Month <- factor(1:12, levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
str(data_test$Month)
View(data_test)
data_test <- data_long
data_test$Month <- factor(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12), levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
View(data_test)
data_test <- data_long
data_test$Month <- factor(c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"), levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
View(data_test)
data_test <- data_long
data_test$Month <- as.factor(data_test$Month, levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
str(data_test$Month)
data_test$Month <- as.factor(data_test$Month)
str(data_test$Month)
data_test$Month <- factor(c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"), levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
View(data_test)
str(data_test$Month)
data_test <- data_long
data_test$Month <- as.factor(data_test$Month)
View(data_test)
data_test$Month <- factor(data_test$Month)
View(data_test)
View(data_test)
data_test$Month <- factor(data_test$Month, levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
View(data_test)
data_test <- data_long
data_test$Month <- factor(data_test$Month)
data_test$Month <- factor(data_test$Month, labels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
View(data_test)
data_test <- data_long
View(data_test)
data_test$Month <- factor(data_test$Month, labels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
View(data_test)
runApp()
runApp()
runApp()
runApp()
runApp()
library(RColorBrewer)
myColor <- brewer.pal(12, "Paired")
myColor
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?theme_light
runApp()
runApp()
runApp()
runApp()
runApp()
View(tableData)
View(data_test)
View(data_table)
View(data_long)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(data_long)
View(data)
View(data_table)
summary(data_table)
summary(data_table)
View(data_table)
runApp()
library(shinyapps)
deployApp
runApp()
deployApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
deployApp()
